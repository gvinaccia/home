{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backend.service.ts","webpack:///./src/app/boiler-manager/boiler-manager.component.html","webpack:///./src/app/boiler-manager/boiler-manager.component.scss","webpack:///./src/app/boiler-manager/boiler-manager.component.ts","webpack:///./src/app/boiler.service.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoilerManagerComponent } from './boiler-manager/boiler-manager.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoilerManagerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'homeCtl';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { BoilerManagerComponent } from './boiler-manager/boiler-manager.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoilerManagerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { connect } from 'socket.io-client';\nimport { environment } from '../environments/environment';\n\ninterface DataPkg {\n  status: boolean;\n  remainingTime: number;\n  schedule: boolean;\n  // temp1: number;\n  // temp2: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService implements OnDestroy {\n\n  private socket;\n\n  private dataSub = new BehaviorSubject<DataPkg>({\n    status: false,\n    remainingTime: 0,\n    schedule: false,\n  });\n\n  private lock = false;\n\n  constructor() {\n    this.socket = connect(environment.backendUrl);\n\n    this.socket.on('datapkg', data => {\n      const parsed = JSON.parse(data);\n      parsed.status = parsed.status === 1;\n      this.dataSub.next(parsed);\n      this.lock = false;\n    });\n  }\n\n  get data$(): Observable<DataPkg> {\n    return this.dataSub.asObservable();\n  }\n\n  sendCommand(cmd): void {\n    if (this.lock) {\n      return;\n    }\n\n    this.lock = true;\n\n    this.socket.emit('command', cmd);\n  }\n\n  ngOnDestroy(): void {\n    this.socket.disconnect();\n    this.dataSub.complete();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"center center\\\"\\n     style=\\\"padding: 4rem; min-height: 16rem\\\">\\n\\n  <div *ngIf=\\\"boilerState$ | async; else boilerOff\\\">\\n    <mat-icon color=\\\"primary\\\" class=\\\"hero-icon\\\">\\n      power\\n    </mat-icon>\\n\\n    <p class=\\\"text-center\\\">{{ remainingTime$ | async }} min</p>\\n  </div>\\n\\n  <ng-template #boilerOff>\\n    <mat-icon color=\\\"primary\\\" class=\\\"hero-icon\\\">\\n      power_off\\n    </mat-icon>\\n    <p>&nbsp;</p>\\n  </ng-template>\\n\\n</div>\\n\\n<section fxLayout=\\\"column\\\" fxLayoutGap=\\\"2rem\\\">\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"turnOff()\\\" *ngIf=\\\"boilerState$ | async\\\">\\n    SPEGNI\\n  </button>\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"turnOn()\\\" *ngIf=\\\"(boilerState$ | async) === false\\\">\\n    ACCENDI\\n  </button>\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"turnOn(60)\\\">\\n    AVVIA 1H\\n  </button>\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"turnOn(120)\\\">\\n    AVVIA 2H\\n  </button>\\n\\n  <mat-divider></mat-divider>\\n\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"toggleSchedule()\\\">\\n    <mat-icon *ngIf=\\\"scheduled$ | async; else scheduleOff\\\">\\n      alarm_on\\n    </mat-icon>\\n    <ng-template #scheduleOff>\\n      <mat-icon>alarm_off</mat-icon>\\n    </ng-template>\\n    AVVIO AUTOMATICO MATTINA\\n  </button>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvaWxlci1tYW5hZ2VyL2JvaWxlci1tYW5hZ2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BoilerService } from '../boiler.service';\n\n@Component({\n  selector: 'app-boiler-manager',\n  templateUrl: './boiler-manager.component.html',\n  styleUrls: ['./boiler-manager.component.scss']\n})\nexport class BoilerManagerComponent implements OnInit {\n\n  boilerState$: Observable<boolean>;\n  remainingTime$: Observable<number>;\n  scheduled$: Observable<boolean>;\n\n  constructor(private svc: BoilerService) { }\n\n  ngOnInit() {\n    this.boilerState$ = this.svc.status$;\n    this.remainingTime$ = this.svc.remainingTime$;\n    this.scheduled$ = this.svc.scheduled$;\n  }\n\n  turnOn(minutes?: number) {\n    this.svc.turnOn(minutes);\n  }\n\n  turnOff() {\n    this.svc.turnOff();\n  }\n\n  toggleSchedule() {\n    this.svc.toggleSchedule();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoilerService {\n\n  constructor(private backend: BackendService) { }\n\n  get status$(): Observable<boolean> {\n    return this.backend.data$.pipe(map(info => info.status));\n  }\n\n  get remainingTime$(): Observable<number> {\n    return this.backend.data$.pipe(map(info => info.remainingTime));\n  }\n\n  get scheduled$(): Observable<boolean> {\n    return this.backend.data$.pipe(map(info => info.schedule));\n  }\n\n  turnOn(minutes?: number) {\n    this.backend.sendCommand({\n      type: 'turn_on',\n      payload: {\n        minutes\n      }\n    });\n  }\n\n  turnOff() {\n    this.backend.sendCommand({\n      type: 'turn_off',\n    });\n  }\n\n  toggleSchedule() {\n    this.backend.sendCommand({\n      name: 's_toggle',\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule, MatDividerModule, MatIconModule, MatToolbarModule } from '@angular/material';\n\nconst components = [\n  MatToolbarModule,\n  MatButtonModule,\n  MatIconModule,\n  MatDividerModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: components,\n  exports: components\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://192.168.1.101:3000',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}